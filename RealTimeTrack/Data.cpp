//
//  Data.cpp
//  RealTimeTrack
//
//  Created by Neil on 11/27/15.
//  Copyright Â© 2015 Neil. All rights reserved.
//

#include "Data.hpp"

mat Data::loadVertexs() {
    mat data, vec;
    int cnt = 0;
    for (int j = 0; j <= 8; j++) {
        if (j % 2 == 0) {
            for (int i = 0; i <= 10; i++) {
                vec.clear();
                vec << i*4.0 << j*3.75 << 0 << endr;
                data.insert_rows(cnt++, vec);
            }
        } else {
            vec.clear();
            vec << 0.0 << j*3.75 << 0 << endr;
            data.insert_rows(cnt++, vec);
            for (int i = 0; i <= 9; i++) {
                vec.clear();
                vec << i*4.0+2.0 << j*3.75 << 0 << endr;
                data.insert_rows(cnt++, vec);
            }
            vec.clear();
            vec << 40 << j*3.75 << 0 << endr;
            data.insert_rows(cnt++, vec);
        }
    }
    std::cout << data.n_rows << std::endl;
    std::cout << data.n_cols << std::endl;
//    data
//    <<  0.0000000e+00  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  3.8095238e+01  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  7.6190476e+01  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  1.1428571e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  1.5238095e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  1.9047619e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  2.2857143e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  2.6666667e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  3.0476190e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  3.4285714e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  3.8095238e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  1.9047619e+01  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  5.7142857e+01  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  9.5238095e+01  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  1.3333333e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  1.7142857e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  2.0952381e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  2.4761905e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  2.8571429e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  3.2380952e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  3.6190476e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  3.8095238e+01  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  7.6190476e+01  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  1.1428571e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  1.5238095e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  1.9047619e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  2.2857143e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  2.6666667e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  3.0476190e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  3.4285714e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  3.8095238e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  1.9047619e+01  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  5.7142857e+01  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  9.5238095e+01  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  1.3333333e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  1.7142857e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  2.0952381e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  2.4761905e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  2.8571429e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  3.2380952e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  3.6190476e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  3.8095238e+01  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  7.6190476e+01  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  1.1428571e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  1.5238095e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  1.9047619e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  2.2857143e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  2.6666667e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  3.0476190e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  3.4285714e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  3.8095238e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  1.9047619e+01  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  5.7142857e+01  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  9.5238095e+01  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  1.3333333e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  1.7142857e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  2.0952381e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  2.4761905e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  2.8571429e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  3.2380952e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  3.6190476e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  3.8095238e+01  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  7.6190476e+01  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  1.1428571e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  1.5238095e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  1.9047619e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  2.2857143e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  2.6666667e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  3.0476190e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  3.4285714e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  3.8095238e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  1.9047619e+01  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  5.7142857e+01  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  9.5238095e+01  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  1.3333333e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  1.7142857e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  2.0952381e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  2.4761905e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  2.8571429e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  3.2380952e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  3.6190476e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  3.8095238e+01  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  7.6190476e+01  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  1.1428571e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  1.5238095e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  1.9047619e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  2.2857143e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  2.6666667e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  3.0476190e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  3.4285714e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  3.8095238e+02  << 3.0000000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 0.0000000e+00  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 3.7500000e+01  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 7.5000000e+01  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 1.1250000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 1.5000000e+02  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 1.8750000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 2.2500000e+02  << 0.0000000e+00 << endr
//    <<  0.0000000e+00  << 2.6250000e+02  << 0.0000000e+00 << endr
//    <<  4.0000000e+02  << 3.0000000e+02  << 0.0000000e+00 << endr;
//    data /= 10;
    return data;
}

umat Data::loadFacets()
{
    umat data, vec;
    int cnt = 0;
    for (int j = 1; j <= 8; j++) {
        if (j % 2 == 0) {
            for (int i = j / 2 * 23; i <= 9 + j / 2 * 23; i++) {
                vec.clear();
                vec << i - 12 << i - 11 << i << endr
                    << i - 11 << i << i + 1 << endr;
                data.insert_rows(cnt++, vec);
            }
            vec.clear();
            vec << 10 + j / 2 * 23 << j / 2 * 23 - 1 << j / 2 * 23 - 2 << endr;
            data.insert_rows(cnt++, vec);
        } else {
            vec.clear();
            vec << 11 + j / 2 * 23 << 12 + j / 2 * 23 << j / 2 * 23 << endr;
            data.insert_rows(cnt++, vec);
            for (int i = 12 + j / 2 * 23; i <= 21 + j / 2 * 23; i++) {
                vec.clear();
                vec << i - 12 << i - 11 << i << endr
                    << i - 11 << i << i + 1 << endr;
                data.insert_rows(cnt++, vec);
            }
        }
    }
//    data
//    << 0 << 1 << 11 << endr
//    << 1 << 2 << 12 << endr
//    << 2 << 3 << 13 << endr
//    << 3 << 4 << 14 << endr
//    << 4 << 5 << 15 << endr
//    << 5 << 6 << 16 << endr
//    << 6 << 7 << 17 << endr
//    << 7 << 8 << 18 << endr
//    << 8 << 9 << 19 << endr
//    << 9 << 10 << 20 << endr
//    << 1 << 12 << 11 << endr
//    << 2 << 13 << 12 << endr
//    << 3 << 14 << 13 << endr
//    << 4 << 15 << 14 << endr
//    << 5 << 16 << 15 << endr
//    << 6 << 17 << 16 << endr
//    << 7 << 18 << 17 << endr
//    << 8 << 19 << 18 << endr
//    << 9 << 20 << 19 << endr
//    << 10 << 21 << 20 << endr
//    << 11 << 12 << 23 << endr
//    << 12 << 13 << 24 << endr
//    << 13 << 14 << 25 << endr
//    << 14 << 15 << 26 << endr
//    << 15 << 16 << 27 << endr
//    << 16 << 17 << 28 << endr
//    << 17 << 18 << 29 << endr
//    << 18 << 19 << 30 << endr
//    << 19 << 20 << 31 << endr
//    << 20 << 21 << 32 << endr
//    << 11 << 23 << 22 << endr
//    << 12 << 24 << 23 << endr
//    << 13 << 25 << 24 << endr
//    << 14 << 26 << 25 << endr
//    << 15 << 27 << 26 << endr
//    << 16 << 28 << 27 << endr
//    << 17 << 29 << 28 << endr
//    << 18 << 30 << 29 << endr
//    << 19 << 31 << 30 << endr
//    << 20 << 32 << 31 << endr
//    << 22 << 23 << 33 << endr
//    << 23 << 24 << 34 << endr
//    << 24 << 25 << 35 << endr
//    << 25 << 26 << 36 << endr
//    << 26 << 27 << 37 << endr
//    << 27 << 28 << 38 << endr
//    << 28 << 29 << 39 << endr
//    << 29 << 30 << 40 << endr
//    << 30 << 31 << 41 << endr
//    << 31 << 32 << 42 << endr
//    << 23 << 34 << 33 << endr
//    << 24 << 35 << 34 << endr
//    << 25 << 36 << 35 << endr
//    << 26 << 37 << 36 << endr
//    << 27 << 38 << 37 << endr
//    << 28 << 39 << 38 << endr
//    << 29 << 40 << 39 << endr
//    << 30 << 41 << 40 << endr
//    << 31 << 42 << 41 << endr
//    << 32 << 43 << 42 << endr
//    << 33 << 34 << 45 << endr
//    << 34 << 35 << 46 << endr
//    << 35 << 36 << 47 << endr
//    << 36 << 37 << 48 << endr
//    << 37 << 38 << 49 << endr
//    << 38 << 39 << 50 << endr
//    << 39 << 40 << 51 << endr
//    << 40 << 41 << 52 << endr
//    << 41 << 42 << 53 << endr
//    << 42 << 43 << 54 << endr
//    << 33 << 45 << 44 << endr
//    << 34 << 46 << 45 << endr
//    << 35 << 47 << 46 << endr
//    << 36 << 48 << 47 << endr
//    << 37 << 49 << 48 << endr
//    << 38 << 50 << 49 << endr
//    << 39 << 51 << 50 << endr
//    << 40 << 52 << 51 << endr
//    << 41 << 53 << 52 << endr
//    << 42 << 54 << 53 << endr
//    << 44 << 45 << 55 << endr
//    << 45 << 46 << 56 << endr
//    << 46 << 47 << 57 << endr
//    << 47 << 48 << 58 << endr
//    << 48 << 49 << 59 << endr
//    << 49 << 50 << 60 << endr
//    << 50 << 51 << 61 << endr
//    << 51 << 52 << 62 << endr
//    << 52 << 53 << 63 << endr
//    << 53 << 54 << 64 << endr
//    << 45 << 56 << 55 << endr
//    << 46 << 57 << 56 << endr
//    << 47 << 58 << 57 << endr
//    << 48 << 59 << 58 << endr
//    << 49 << 60 << 59 << endr
//    << 50 << 61 << 60 << endr
//    << 51 << 62 << 61 << endr
//    << 52 << 63 << 62 << endr
//    << 53 << 64 << 63 << endr
//    << 54 << 65 << 64 << endr
//    << 55 << 56 << 67 << endr
//    << 56 << 57 << 68 << endr
//    << 57 << 58 << 69 << endr
//    << 58 << 59 << 70 << endr
//    << 59 << 60 << 71 << endr
//    << 60 << 61 << 72 << endr
//    << 61 << 62 << 73 << endr
//    << 62 << 63 << 74 << endr
//    << 63 << 64 << 75 << endr
//    << 64 << 65 << 76 << endr
//    << 55 << 67 << 66 << endr
//    << 56 << 68 << 67 << endr
//    << 57 << 69 << 68 << endr
//    << 58 << 70 << 69 << endr
//    << 59 << 71 << 70 << endr
//    << 60 << 72 << 71 << endr
//    << 61 << 73 << 72 << endr
//    << 62 << 74 << 73 << endr
//    << 63 << 75 << 74 << endr
//    << 64 << 76 << 75 << endr
//    << 66 << 67 << 77 << endr
//    << 67 << 68 << 78 << endr
//    << 68 << 69 << 79 << endr
//    << 69 << 70 << 80 << endr
//    << 70 << 71 << 81 << endr
//    << 71 << 72 << 82 << endr
//    << 72 << 73 << 83 << endr
//    << 73 << 74 << 84 << endr
//    << 74 << 75 << 85 << endr
//    << 75 << 76 << 86 << endr
//    << 67 << 78 << 77 << endr
//    << 68 << 79 << 78 << endr
//    << 69 << 80 << 79 << endr
//    << 70 << 81 << 80 << endr
//    << 71 << 82 << 81 << endr
//    << 72 << 83 << 82 << endr
//    << 73 << 84 << 83 << endr
//    << 74 << 85 << 84 << endr
//    << 75 << 86 << 85 << endr
//    << 76 << 87 << 86 << endr
//    << 77 << 78 << 89 << endr
//    << 78 << 79 << 90 << endr
//    << 79 << 80 << 91 << endr
//    << 80 << 81 << 92 << endr
//    << 81 << 82 << 93 << endr
//    << 82 << 83 << 94 << endr
//    << 83 << 84 << 95 << endr
//    << 84 << 85 << 96 << endr
//    << 85 << 86 << 97 << endr
//    << 86 << 87 << 98 << endr
//    << 77 << 89 << 88 << endr
//    << 78 << 90 << 89 << endr
//    << 79 << 91 << 90 << endr
//    << 80 << 92 << 91 << endr
//    << 81 << 93 << 92 << endr
//    << 82 << 94 << 93 << endr
//    << 83 << 95 << 94 << endr
//    << 84 << 96 << 95 << endr
//    << 85 << 97 << 96 << endr
//    << 86 << 98 << 97 << endr
//    << 10 << 99 << 21 << endr
//    << 0 << 11 << 100 << endr
//    << 100 << 11 << 22 << endr
//    << 21 << 101 << 32 << endr
//    << 32 << 101 << 43 << endr
//    << 22 << 33 << 102 << endr
//    << 102 << 33 << 44 << endr
//    << 43 << 103 << 54 << endr
//    << 54 << 103 << 65 << endr
//    << 44 << 55 << 104 << endr
//    << 104 << 55 << 66 << endr
//    << 65 << 105 << 76 << endr
//    << 76 << 105 << 87 << endr
//    << 66 << 77 << 106 << endr
//    << 106 << 77 << 88 << endr
//    << 87 << 107 << 98 << endr;
    std::cout << data.n_rows << std::endl;
    std::cout << data.n_cols << std::endl;
    return data;
}

urowvec Data::loadControlPoints()
{
    urowvec data;
    data
    << 0 << 3 << 5 << 7 << 10
    << 23 << 26 << 28 << 30 << 33
    << 46 << 49 << 51 << 53 << 56
    << 69 << 72 << 74 << 76 << 79
    << 92 << 95 << 97 << 99 << 102;
    return data;
}

mat Data::loadA()
{
    mat data;
    data
    << 160 << 0 << 0 << endr
    << 0 << 160 << 0 << endr
    << 0 << 0 << 1.0000;
    return data;
}

mat Data::loadRealA()
{
    mat data;
    data
    << 1.15470*320 << 0 << -320 << endr
    << 0 << 1.73205*240 << -240 << endr
    << 0 << 0 << -1;
    return data;
}

mat Data::loadRt()
{
    mat data;
    data
    << 1 << 0 << 0 << 0 << endr
    << 0 << 1 << 0 << 0 << endr
    << 0 << 0 << 1 << 10.0;
    return data;
}

mat Data::loadRealRt()
{
    mat data;
    data
    << 1 << 0 << 0 << 0 << endr
    << 0 << 0 << 1 << 0 << endr
    << 0 << 1 << 0 << -40;
    return data;
}

mat Data::loadCorner()
{
    mat data;
    data
    << 0 << 0 << 1.0000000e+00 << endr
    << 640 << 0 << 1.0000000e+00 << endr
    << 640 << 480 << 1.0000000e+00 << endr
    << 0 << 480 << 1.0000000e+00;
    return data;
}

